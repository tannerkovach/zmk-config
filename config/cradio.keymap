// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        mp: mp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp M &kp A &kp S &kp T &kp E &kp R &kp LS(C) &kp H &kp LS(I) &kp E &kp LS(F) &kp AMPS &kp M &kp J &kp O &kp L &kp N &kp I &kp R &kp M &kp A &kp R &kp K &kp N5 &kp I &kp V &kp E &kp EXCL>;
            label = "MP";
        };

        dp: dp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(M) &kp J &kp O &kp L &kp N &kp I &kp R &kp M &kp A &kp R &kp K &kp N5 &kp I &kp V &kp E>;
            label = "DP";
        };
    };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <130>;
            require-prior-idle-ms = <120>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            retro-tap;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                          &kp W            &kp F         &kp P            &kp B             &kp J  &kp L            &kp U         &kp Y            &lt 4 SEMICOLON
&hml LA(LC(LG(LEFT_SHIFT))) A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_GUI T  &kp G             &kp M  &hmr LEFT_GUI N  &hmr LCTRL E  &hmr LEFT_ALT I  &hmr LC(LA(LG(LEFT_SHIFT))) O
&kp Z                          &kp X            &kp C         &kp D            &kp V             &kp K  &kp H            &kp COMMA     &kp DOT          &kp FSLH
                                                              &mo 1            &kp LEFT_SHIFT    &mo 2  &lt 3 SPACE
            >;
        };

        core {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp NUMBER_4       &kp NUMBER_5     &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp ESCAPE    &kp TAB       &kp BACKSPACE  &kp ENTER          &kp LS(ENTER)    &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans
&kp LG(Z)     &kp LG(X)     &kp LG(C)      &kp LA(BACKSPACE)  &kp LG(V)        &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
                                           &trans             &trans           &trans        &kp NUMBER_0
            >;
        };

        sym {
            bindings = <
&kp GRAVE  &kp LESS_THAN  &kp GREATER_THAN  &kp LS(NUMBER_6)  &kp UNDERSCORE    &kp AMPERSAND      &kp SEMICOLON  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SLASH
&kp EXCL   &kp MINUS      &kp PLUS          &kp EQUAL         &kp HASH          &kp AT_SIGN        &kp COLON      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION
&kp TILDE  &kp DOLLAR     &kp ASTERISK      &kp BACKSLASH     &kp PIPE          &kp DOUBLE_QUOTES  &kp PERCENT    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SQT
                                            &trans            &trans            &trans             &trans
            >;
        };

        nav {
            bindings = <
&mp                       &dp               &trans         &trans            &trans    &trans     &kp LC(LS(TAB))  &kp UP_ARROW  &kp LC(TAB)  &trans
&sk LC(LA(LS(LEFT_GUI)))  &sk LEFT_ALT      &sk LCTRL      &sk LEFT_GUI      &trans    &kp CARET  &kp LEFT         &kp DOWN      &kp RIGHT    &kp DOLLAR
&sk LA(LC(LEFT_SHIFT))    &sk LS(LEFT_ALT)  &sk LS(LCTRL)  &sk LS(LEFT_GUI)  &trans    &trans     &kp HOME         &kp LS(N5)    &kp END      &trans
                                                           &trans            &trans    &trans     &trans
            >;
        };

        system {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans      &trans          &trans  &trans
            >;
        };
    };
};
